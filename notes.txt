Git Commit in details

git log --oneline

git add outline.txt
git commit —amend

git branch -> shows list of branch
git branch <name> - to make a new branch based upon the current HEAD
git switch <branch-name> - to switch to another branch

git commit -a -m “<message>”

git switch -c <branch-name> -> create and switch to this branch

git branch -D <branch-name> -> forcefully delete branch

git branch -m <NEW-branch-name> #switch to the branch you want to rename

git merge 

git diff 
# Compares Staging Area and Working Directory
# Without additional options, git diff lists all the changes
in our working directory that are NOT staged for the next commit
git diff HEAD
# Compares between the head and working directory
# git diff HEAD lists all changes in the working tree since your last commit

git diff --staged or --cached
# will list the changes between staging area and our last commit

git diff HEAD [filename]
git diff --staged [filename]
# sample: git diff --staged numbers.txt

git diff branch1..branch2
# sample: git diff main..odd-number

git diff commit1..commit2

git diff HEAD HEAD~1

git stash
git stash pop - to remove the most recenly stashed changes in your stash and re-apply them to your working copy

git stash list
git stash apply stash@{2}
git stash drop stash@{2}
git stash clear